apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: jelarr
  namespace: argocd
  annotations:
    avp.kubernetes.io/path: "k8secrets/ingresses"
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          jelarr: "installed"
          k8s-csi-nfs: "installed"          
      values:
        revision: '{{metadata.annotations.branch-name}}'
  - clusters:
      selector:
        matchLabels:
          jelarr: "passive"
      template:
        metadata: 
          name: '{{name}}-jelarr-passive' 
        spec:
          sources:
          - helm:
              releaseName: jelarr
              values: |
                controller:
                  enabled: false
                service:
                  main:
                    ports:
                      http:
                        port: 8096
                    annotations:
                      service.cilium.io/global: "true"
                ingress:
                  main:
                    enabled: true
                    className: nginx
                    annotations:
                      nginx.ingress.kubernetes.io/service-upstream: "true"
                    hosts:
                      - host: <jelarrhostname>.<domainname>
                        paths:
                          - path: /
                            pathType: Prefix
            repoURL: https://bjw-s.github.io/helm-charts
            chart: app-template
            targetRevision: 2.5.0
          destination:
            server: '{{server}}'
            namespace: jelarr
          project: k8s-homelab-apps
  template:
    metadata:
      name: '{{name}}-jelarr'
    spec:
      project: k8s-homelab-apps
      sources:
      - repoURL: https://github.com/vadimzharov/k8s-rpi-cluster.git
        targetRevision: '{{values.revision}}'
        path: k8s-apps/arr/jelarr
      - helm:
          releaseName: jelarr
          values: |
            service:
              main:
                ports:
                  http:
                    port: 8096
                annotations:
                  service.cilium.io/global: "true"                
            ingress:
              main:
                enabled: true
                className: nginx
                hosts:
                  - host: <jelarrhostname>.<domainname>
                    paths:
                      - path: /
                        pathType: Prefix
            persistence:
              config:
                enabled: true
                type: emptyDir
                mountPath: /jellyfin-data
              jelarr-arr:
                enabled: true
                type: persistentVolumeClaim
                existingClaim: jelarr-arr
                mountPath: /arr
              dedicated-movies:
                enabled: true
                type: persistentVolumeClaim
                existingClaim: dedicated-movies
                mountPath: /dedicated-movies/
            secrets:
              b-r-secret:
                enabled: true
                labels: {}
                annotations: {}
                stringData:
                  S3_ENDPOINT: <path:k8secrets/backup/minios3creds#minioendpoint>
                  AWS_KEY: <path:k8secrets/backup/minios3creds#miniokey>
                  AWS_SECRET_KEY: <path:k8secrets/backup/minios3creds#miniosecretkey>
            configMaps:
              b-r-settings:
                enabled: true
                data:
                  AWS_BUCKET: "arr-bkp"
                  S3_BUCKET_FOLDER: "jelarr-config"
                  S3_FILE_PREFIX: "jelarr-config"
                  BACKUP_INTERVAL: "1h"
                  PRUNE_INTERVAL: "48h"
                  COPIES_TO_KEEP: "35"
                  FORCE_RESTORE: "true"
                  DIR_TO_BACKUP: /jellyfin-data
                  DIR_TO_RESTORE: /jellyfin-data
                  ARCHIVE_TYPE: targz
            controllers:
              main:
                initContainers:
                  jelarr-restore:
                    image: 
                      repository: quay.io/vadimzharov/podbackup
                      pullPolicy: IfNotPresent
                      tag: latest
                    command:
                      - podbackup
                    args:
                      - restore
                    envFrom:
                    - secretRef:
                        name: jelarr-b-r-secret
                    - configMapRef:
                        name: jelarr-b-r-settings
                    volumeMounts:
                    - name:  config
                      mountPath: /jellyfin-data
                containers:
                  main:
                    image:
                      repository: docker.io/jellyfin/jellyfin
                      pullPolicy: IfNotPresent
                      tag: latest
                    env:
                      JELLYFIN_DATA_DIR: "/jellyfin-data"
                      JELLYFIN_CONFIG_DIR: "/jellyfin-data/config"
                      TZ: "CST"
                      MALLOC_TRIM_THRESHOLD_: "131072"
                  jelarr-backup-daemon:
                    image: 
                      repository: quay.io/vadimzharov/podbackup
                      pullPolicy: IfNotPresent
                      tag: latest
                    command:
                      - podbackup
                    args:
                      - backup-daemon
                    envFrom:
                    - secretRef:
                        name: jelarr-b-r-secret
                    - configMapRef:
                        name: jelarr-b-r-settings
                    volumeMounts:
                    - name:  config
                      mountPath: /jellyfin-data
        repoURL: https://bjw-s.github.io/helm-charts
        chart: app-template
        targetRevision: 2.5.0
      destination:
        server: '{{server}}' 
        namespace: jelarr
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
      