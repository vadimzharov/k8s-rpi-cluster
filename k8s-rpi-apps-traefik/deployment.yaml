---
# Source: traefik/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
    helm.sh/chart: traefik-10.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: traefik
  annotations:
    prometheus.io/scrape: "false"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9100"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
      app.kubernetes.io/instance: traefik
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template: 
    metadata:
      labels:
        app.kubernetes.io/name: traefik
        helm.sh/chart: traefik-10.1.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: traefik
    spec:
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      hostNetwork: false
      containers:
      - image: "traefik:2.4.9"
        imagePullPolicy: IfNotPresent
        name: traefik
        env:
          - name: GODADDY_API_KEY
            valueFrom:
              secretKeyRef:
                name: godaddy-api-key
                key: key
          - name: GODADDY_API_SECRET
            valueFrom:
              secretKeyRef:
                name: godaddy-api-key
                key: token        
        resources:
          requests:
            cpu: 150m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 128Mi     
        readinessProbe:
          httpGet:
            path: /ping
            port: 9009
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: 9009
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - name: "metrics"
          containerPort: 9100
          protocol: "TCP"
        - name: "traefik"
          containerPort: 9009
          protocol: "TCP"
        - name: "api"
          containerPort: 8080
          protocol: "TCP"          
        - name: "web"
          containerPort: 8008
          protocol: "TCP"
        - name: "websecure"
          containerPort: 8443
          protocol: "TCP"
        - name: "websecure-ext"
          containerPort: 6443
          protocol: "TCP"          
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        volumeMounts:
          - name: data
            mountPath: /data
          - name: tmp
            mountPath: /tmp
          - name: certs-store
            mountPath: /certs
          - mountPath: /etc/traefik/traefik.yaml
            name: traefik-config
            subPath: traefik.yaml
      volumes:
        - name: data
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: certs-store
          emptyDir: {}
        - name: traefik-config
          configMap:
            defaultMode: 420
            name: traefik-config
      securityContext:
        fsGroup: 65532
