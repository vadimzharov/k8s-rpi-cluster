# Source: invidious/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: invidious-postgresql
  namespace: default
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: invidious
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  serviceName: invidious-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: invidious
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: invidious-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/instance: invidious
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
      containers:
        - name: postgresql
          image: docker.io/library/postgres:14
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          envFrom:
            - secretRef:
                name: invidious-psql-config
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          # livenessProbe:
          #   failureThreshold: 6
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 5
          #   exec:
          #     command:
          #       - /bin/sh
          #       - -c
          #       - exec pg_isready -U "kemal" -d "dbname=invidious" -h 127.0.0.1 -p 5432
          # readinessProbe:
          #   failureThreshold: 6
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 5
          #   exec:
          #     command:
          #       - /bin/sh
          #       - -c
          #       - exec pg_isready -U "kemal" -d "dbname=invidious" -h 127.0.0.1 -p 5432
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            - name: dshm
              mountPath: /dev/shm
      volumes:
        - name: custom-init-scripts
          configMap:
            name: invidious-postgresql-init
        - name: dshm
          emptyDir:
            medium: Memory
            
