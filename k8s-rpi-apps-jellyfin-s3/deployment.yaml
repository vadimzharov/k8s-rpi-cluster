apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin-s3
  labels:
    app.kubernetes.io/name: jellyfin-s3
  annotations:
    avp.kubernetes.io/path: k8secrets/jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin-s3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin-s3
    spec:
      volumes:
        - name: downloads-complete
          hostPath:
            path: /var/mnt/s3-torrents
        - name: jellyfin-datadir
          emptyDir: {}
      initContainers:
        - name: jellyfin-restore
          image: 'quay.io/vadimzharov/podbackup:latest'
          command:
            - podbackup
          args:
            - restore
          envFrom:
            - configMapRef:
                name: backup-restore-settings
            - secretRef:
                name: backup-restore-aws-creds
          resources: {}
          volumeMounts:
            - name: jellyfin-datadir
              mountPath: /jellyfin-data
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      containers:
        - name: jellyfin
          image: 'jellyfin/jellyfin:10.8.1'
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          env:
            - name: JELLYFIN_DATA_DIR
              value: /jellyfin-data
            - name: JELLYFIN_CONFIG_DIR
              value: /jellyfin-data/config
            - name: TZ
              value: UTC
          resources: {}
          volumeMounts:
            - name: downloads-complete
              mountPath: /downloads/complete
            - name: jellyfin-datadir
              mountPath: /jellyfin-data
# Liveness probe to check S3 mount is alive (i.e. if rclone pod was restarted - jellyfin loose access to the folder).
          livenessProbe:
            exec: 
              command:
                - ls
                - /downloads/complete
            initialDelaySeconds: 120
            periodSeconds: 120
          readinessProbe:
            tcpSocket:
              port: 8096
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: 8096
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 60
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              gpu.intel.com/i915: 1          
        - name: jellyfin-backup-daemon
          image: 'quay.io/vadimzharov/podbackup:latest'
          command:
            - podbackup
          args:
            - backup-daemon
          envFrom:
            - configMapRef:
                name: backup-restore-settings
            - secretRef:
                name: backup-restore-aws-creds
          resources:
            limits:
              cpu: 150m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
            - name: jellyfin-datadir
              mountPath: /jellyfin-data
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        shared-s3: "true"
      serviceAccountName: default
      serviceAccount: default
      automountServiceAccountToken: true
      securityContext: {}
      schedulerName: default-scheduler
      enableServiceLinks: true
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
  strategy:
    type: Recreate
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
