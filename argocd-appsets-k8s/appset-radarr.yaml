apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: radarr
  namespace: argocd
  annotations:
    avp.kubernetes.io/path: "k8secrets/ingresses"
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          radarr: "installed"
          k8s-csi-s3: "installed"          
      values:
        revision: '{{metadata.annotations.branch-name}}'
  - clusters:
      selector:
        matchLabels:
          radarr: "passive"
      template:
        metadata: 
          name: '{{name}}-radarr-passive' 
        spec:
          sources:
          - helm:
              releaseName: radarr
              values: |
                controller:
                  enabled: false
                service:
                  main:
                    ports:
                      http:
                        port: 8989
                    annotations:
                      service.cilium.io/global: "true"
                ingress:
                  main:
                    enabled: true
                    ingressClassName: nginx
                    hosts:
                      - host: <radarrhostname>.<domainname>
                        paths:
                          - path: /
                      pathType: Prefix
            repoURL: https://bjw-s.github.io/helm-charts
            chart: app-template
            targetRevision: 1.5.1                      
          destination:
            server: '{{server}}'
            namespace: radarr
          project: k8s-rpi-apps        
  template:
    metadata:
      name: '{{name}}-radarr'
    spec:
      project: k8s-rpi-apps
      sources:
      - repoURL: https://github.com/vadimzharov/k8s-rpi-cluster.git
        targetRevision: '{{values.revision}}'
        path: k8s-apps-arr/radarr
      - helm:
          releaseName: radarr
          values: |
            image:
              repository: lscr.io/linuxserver/radarr
              pullPolicy: IfNotPresent
              tag: latest
            service:
              main:
                ports:
                  http:
                    port: 8989
                annotations:
                  service.cilium.io/global: "true"                
            ingress:
              main:
                enabled: true
                ingressClassName: nginx
                hosts:
                  - host: <radarrhostname>.<domainname>
                    paths:
                      - path: /
                        pathType: Prefix
            persistence:
              config:
                enabled: true
                type: emptyDir
                mountPath: /config
              root-folder:
                enabled: true
                type: pvc
                existingClaim: radarr-root
                mountPath: /radarr
              tranar:
                enabled: true
                type: pvc
                existingClaim: tranarr
                mountPath: /tranarr
            secrets:
              b-r-secret:
                enabled: true
                labels: {}
                annotations: {}
                stringData:
                  S3_ENDPOINT: <path:k8secrets/minios3creds#minioendpoint>
                  AWS_KEY: <path:k8secrets/minios3creds#miniokey>
                  AWS_SECRET_KEY: <path:k8secrets/minios3creds#miniosecretkey>
            configMaps:
              b-r-settings:
                enabled: true
                data:
                  AWS_BUCKET: "arr-bkp"
                  S3_BUCKET_FOLDER: "radarr-config"
                  S3_FILE_PREFIX: "radarr-config"
                  BACKUP_INTERVAL: "1h"
                  PRUNE_INTERVAL: "48h"
                  COPIES_TO_KEEP: "35"
                  FORCE_RESTORE: "true"
                  DIR_TO_BACKUP: /config
                  DIR_TO_RESTORE: /config
                  ARCHIVE_TYPE: targz
            initContainers:
              radarr-restore:
                image: quay.io/vadimzharov/podbackup:latest
                imagePullPolicy: Always
                command:
                  - podbackup
                args:
                  - restore
                envFrom:
                - secretRef:
                    name: radarr-b-r-secret
                - configMapRef:
                    name: radarr-b-r-settings
                volumeMounts:
                - name:  config
                  mountPath: /config              
            sidecars:
              radarr-backup-daemon:
                image: quay.io/vadimzharov/podbackup:latest
                imagePullPolicy: Always
                command:
                  - podbackup
                args:
                  - backup-daemon
                envFrom:
                - secretRef:
                    name: radarr-b-r-secret
                - configMapRef:
                    name: radarr-b-r-settings
                volumeMounts:
                - name:  config
                  mountPath: /config
        repoURL: https://bjw-s.github.io/helm-charts
        chart: app-template
        targetRevision: 1.5.1
      destination:
        server: '{{server}}' 
        namespace: radarr
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
      