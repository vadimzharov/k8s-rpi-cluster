apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: immich
  namespace: argocd
  annotations:
    avp.kubernetes.io/path: "k8secrets/immich"
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          immich: "installed"
          k8s-csi-nfs: "installed"          
      values:
        revision: '{{metadata.annotations.branch-name}}'
  - clusters:
      selector:
        matchLabels:
          immich: "passive"
      values:
        revision: '{{metadata.annotations.branch-name}}'
      template:
        metadata: 
          name: '{{name}}-immich-passive' 
        spec:
          sources:
            - repoURL: https://github.com/vadimzharov/k8s-rpi-cluster.git
              targetRevision: '{{values.revision}}'
              path: k8s-rpi-apps-ingress/immich-ingress
          destination:
            server: '{{server}}'
            namespace: immich
          project: k8s-rpi-apps              
  template:
    metadata:
      name: '{{name}}-immich'
    spec:
      project: k8s-rpi-apps
      sources:
      - helm:
          releaseName: immich
          values: |
            global:
              postgresql:
                auth:
                  username: <pgsql_username>
                  password: <pgsql_password>
                  database: <pgsql_database>
            primary:
              persistence:
                enabled: false
              extraVolumes:
                - name: pgsql-restored-mark
                  emptyDir: {}
              extraVolumeMounts:
                - name:  pgsql-restored-mark
                  mountPath: /tmp/pgsqlrestore/
              startupProbe:
                exec:
                  command:
                    - cat
                    - /tmp/pgsqlrestore/restored
                failureThreshold: 30
                periodSeconds: 20
                initialDelaySeconds: 10                  
              sidecars:
              - name: pgsql-backup-daemon
                image: quay.io/vadimzharov/podbackup:latest
                imagePullPolicy: Always
                command:
                  - podbackup
                args:
                  - backup-pgsql-daemon
                envFrom:
                - secretRef:
                    name: sync-s3-secret
                - configMapRef:
                    name: pgsql-b-r-settings
                - secretRef:
                    name: pgsql-creds
                volumeMounts:
                - name:  pgsql-restored-mark
                  mountPath: /tmp/pgsqlrestore/                
                lifecycle:
                  preStop:
                    exec:
                      command:
                        - podbackup
                        - backup-pgsql
                  postStart:
                    exec:
                      command:
                        - podbackup
                        - restore-pgsql
        repoURL: https://charts.bitnami.com/bitnami
        chart: postgresql
        targetRevision: 12.8.2
      - repoURL: https://github.com/vadimzharov/k8s-rpi-cluster.git
        targetRevision: '{{values.revision}}'
        path: k8s-apps-immich
      - repoURL: https://github.com/vadimzharov/k8s-rpi-cluster.git
        targetRevision: '{{values.revision}}'
        path: k8s-rpi-apps-ingress/immich-ingress
      - helm:
          releaseName: immich
          values: |
            env:
              IMMICH_MACHINE_LEARNING_URL: "false"          
            image:
              tag: v1.82.1
            immich:
              persistence:
                library:
                  existingClaim: immich-photos
            redis:
              enabled: true
              architecture: standalone
              master:
                persistence:
                  enabled: false
              auth:
                enabled: false
            machine-learning:
              enabled: false
            postgresql:
              enabled: false
              global:
                postgresql:
                  auth:
                    username: <pgsql_username>
                    password: <pgsql_password>
                    database: <pgsql_database>
            server:
              enabled: true
              image:
                repository: ghcr.io/immich-app/immich-server
                pullPolicy: IfNotPresent
            proxy:
              ingress:
                main:
                  enabled: false
        repoURL: https://immich-app.github.io/immich-charts
        chart: immich
        targetRevision: 0.1.2
      destination:
        server: '{{server}}' 
        namespace: immich
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
      