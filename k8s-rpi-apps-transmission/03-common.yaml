---
# Source: transmission/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: k8s-rpi-transmission
  labels:
    helm.sh/chart: transmission-7.1.0
    app.kubernetes.io/name: transmission
    app.kubernetes.io/instance: k8s-rpi
    app.kubernetes.io/version: "v3.00"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 9091
    targetPort: tr-ui
    protocol: TCP
    name: tr-ui
  selector:
    app.kubernetes.io/name: transmission
    app.kubernetes.io/instance: k8s-rpi
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-rpi-minidlna-ui
  labels:
    app.kubernetes.io/name: transmission
    app.kubernetes.io/instance: k8s-rpi
spec:
  type: ClusterIP
  ports:
  - port: 8200
    targetPort: minidlna-ui
    protocol: TCP
    name: minidlna-ui
  selector:
    app.kubernetes.io/name: transmission
    app.kubernetes.io/instance: k8s-rpi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: transmission
    app.kubernetes.io/instance: k8s-rpi
  name: minidlna-udp
spec:
  ports:
  - name: '31900'
    port: 31900
    protocol: UDP
    targetPort: 1900
  selector:
    app.kubernetes.io/name: transmission
    app.kubernetes.io/instance: k8s-rpi
#  type: NodePort
  type: ClusterIP
---
# Source: transmission/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-rpi-transmission
  labels:
    helm.sh/chart: transmission-7.1.0
    app.kubernetes.io/name: transmission
    app.kubernetes.io/instance: k8s-rpi
    app.kubernetes.io/version: "v3.00"
    app.kubernetes.io/managed-by: Helm
  annotations:
    avp.kubernetes.io/path: "k8secrets/transmission"        
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: transmission
      app.kubernetes.io/instance: k8s-rpi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: transmission
        app.kubernetes.io/instance: k8s-rpi
    spec:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
      hostNetwork: true
      serviceAccountName: default
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      volumes:
        - name: downloads-complete
          emptyDir: {}
        - name: downloads-incomplete
          emptyDir: {}
        - name: confdir
          emptyDir: {}
        - name: minidlna-dir
          emptyDir: {}
        - name: minidlna-config
          configMap:
            name: minidlna-config
      nodeSelector:
          kubernetes.io/hostname: <trk8snodename>
      containers:
        - name: k8s-rpi-transmission
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi        
          image: "ghcr.io/k8s-at-home/transmission:v3.00"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: downloads-complete
              mountPath: /downloads/complete
            - name: downloads-incomplete
              mountPath: /downloads/incomplete
            - name: confdir
              mountPath: /config
          env:
            - name: "TRANSMISSION_DOWNLOAD_DIR"
              value: "/downloads/complete"
            - name: "TRANSMISSION_INCOMPLETE_DIR"
              value: "/downloads/incomplete"
            - name: "TRANSMISSION_INCOMPLETE_DIR_ENABLED"
              value: "false"
            - name: "TRANSMISSION_WATCH_DIR"
              value: "/watch"
            - name: "TRANSMISSION_WATCH_DIR_ENABLED"
              value: "false"
            - name: "TRANSMISSION_WEB_HOME"
              value: "/web"
            - name: "TZ"
              value: "CDT"
          ports:
            - name: tr-ui
              containerPort: 9091
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9091
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 9091
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 30
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 9091
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
        - name: transmission-backup-daemon
          image: quay.io/vadimzharov/dirbackup:latest
          lifecycle:
            preStop:
              exec:
                command: ["/usr/local/bin/dirbackup", "backup"]
          command: ["dirbackup"]
          args: ["backup-daemon"]
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
            - name: confdir
              mountPath: /config
          env:
          - name: AWS_BUCKET
            valueFrom:
              secretKeyRef:
                name: backup-restore-creds
                key: awsbucket
          - name: AWS_KEY
            valueFrom:
              secretKeyRef:
                name: backup-restore-creds
                key: awskey
          - name: AWS_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: backup-restore-creds
                key: awssecretkey
          - name: S3_BUCKET_FOLDER
            value: "transmission"
          - name: S3_FILE_PREFIX
            value: "trans-backup"
          - name: DIR_TO_BACKUP
            value: "/config"
          - name: BACKUP_INTERVAL
            value: "43200"
          - name: COPIES_TO_KEEP
            value: "5"
        - name: k8s-rpi-minidlna
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 300m
              memory: 256Mi        
          image: "quay.io/vadimzharov/minidlna:latest"
          imagePullPolicy: Always
          volumeMounts:
            - name: downloads-complete
              mountPath: /media
            - name: minidlna-config
              mountPath: /etc/minidlna/minidlna.conf
              subPath: minidlna.conf
            - name: minidlna-dir
              mountPath: /minidlna
          ports:
            - name: dlna
              containerPort: 1900
              protocol: UDP
            - name: minidlna-ui
              containerPort: 8200
              protocol: TCP
      initContainers:
        - name: transmission-restore
          image: quay.io/vadimzharov/dirbackup:latest
          command: ["dirbackup"]
          args: ["restore"]
          volumeMounts:
            - name: confdir
              mountPath: /config
          env:
          - name: AWS_BUCKET
            valueFrom:
              secretKeyRef:
                name: backup-restore-creds
                key: awsbucket
          - name: AWS_KEY
            valueFrom:
              secretKeyRef:
                name: backup-restore-creds
                key: awskey
          - name: AWS_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: backup-restore-creds
                key: awssecretkey
          - name: S3_BUCKET_FOLDER
            value: "transmission"
          - name: S3_FILE_PREFIX
            value: "trans-backup"
          - name: DIR_TO_RESTORE
            value: "/config"            
