apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: photoprism-old
  namespace: argocd
  annotations:
    avp.kubernetes.io/path: "k8secrets/photoprism-old"
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          photoprism-old: "installed"
          k8s-csi-nfs: "installed"          
      values:
        revision: '{{metadata.annotations.branch-name}}'
  - clusters:
      selector:
        matchLabels:
          photoprism-old: "passive"
      template:
        metadata: 
          name: '{{name}}-photoprism-old-passive' 
        spec:
          sources:
          - helm:
              releaseName: photoprism-old
              values: |
                controller:
                  enabled: false
                service:
                  main:
                    ports:
                      http:
                        port: 7878
                    annotations:
                      service.cilium.io/global: "true"
                ingress:
                  main:
                    enabled: true
                    annotations:
                      nginx.ingress.kubernetes.io/service-upstream: "true"
                      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
                      nginx.ingress.kubernetes.io/proxy-body-size: "0"
                    ingressClassName: nginx
                    hosts:
                      - host: <PHOTOPRISM_SITE_HOSTNAME>
                        paths:
                          - path: /
                            pathType: Prefix
            repoURL: https://bjw-s.github.io/helm-charts
            chart: app-template
            targetRevision: 1.5.1                      
          destination:
            server: '{{server}}'
            namespace: photoprism-old
          project: k8s-rpi-apps        
  template:
    metadata:
      name: '{{name}}-photoprism-old'
    spec:
      project: k8s-rpi-apps
      sources:
      - repoURL: https://github.com/vadimzharov/k8s-rpi-cluster.git
        targetRevision: '{{values.revision}}'
        path: k8s-apps-photoprism-old
      - helm:
          releaseName: photoprism-old
          values: |
            image:
              repository: photoprism/photoprism
              pullPolicy: IfNotPresent
              tag: latest
            service:
              main:
                ports:
                  http:
                    port: 2342
                annotations:
                  service.cilium.io/global: "true"                
            ingress:
              main:
                enabled: true
                ingressClassName: nginx
                annotations:
                  nginx.ingress.kubernetes.io/service-upstream: "true"
                  nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
                  nginx.ingress.kubernetes.io/proxy-body-size: "0"
                hosts:
                  - host: <PHOTOPRISM_SITE_HOSTNAME>
                    paths:
                      - path: /
                        pathType: Prefix
            envFrom: 
              - secretRef:
                  name: photoprism-old-photoprism-config
            persistence:
              storage:
                enabled: true
                type: pvc
                existingClaim: photoprism-old-storage
                mountPath: /photoprism/storage
              originals:
                enabled: true
                type: pvc
                existingClaim: photoprism-old-photos
                mountPath: /photoprism/originals
            secrets:
              photoprism-config:
                enabled: true
                labels: {}
                annotations: {}
                stringData:
                  PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
                  PHOTOPRISM_ORIGINALS_LIMIT: "5000"               # file size limit for originals in MB (increase for high-res video)
                  PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
                  PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
                  PHOTOPRISM_READONLY: "false"                    # do not modify originals directory (reduced functionality)
                  PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
                  PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
                  PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
                  PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
                  PHOTOPRISM_DISABLE_TENSORFLOW: "true"         # disables all features depending on TensorFlow
                  PHOTOPRISM_DISABLE_FACES: "true"              # disables face detection and recognition (requires TensorFlow)
                  PHOTOPRISM_DISABLE_CLASSIFICATION: "true"     # disables image classification (requires TensorFlow)
                  PHOTOPRISM_DISABLE_RAW: "true"                # disables indexing and conversion of RAW files
                  PHOTOPRISM_RAW_PRESETS: "true"                # enables applying user presets when converting RAW files (reduces performance)
                  PHOTOPRISM_JPEG_QUALITY: "85"                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
                  PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
                  PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
                  PHOTOPRISM_DATABASE_DRIVER: "mysql"         # SQLite is an embedded database that doesn't require a server
                  PHOTOPRISM_DATABASE_SERVER: "mariadb:3306" 
                  PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
                  PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
                  PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
                  PHOTOPRISM_ADMIN_PASSWORD: "<PHOTOPRISM_ADMIN_PASSWORD>"
                  PHOTOPRISM_ADMIN_USER: "<PHOTOPRISM_ADMIN_USER>"
                  PHOTOPRISM_SITE_URL: "https://<PHOTOPRISM_SITE_HOSTNAME>/"
                  PHOTOPRISM_DATABASE_NAME: <MARIADB_DATABASE>
                  PHOTOPRISM_DATABASE_USER: <MARIADB_USER>
                  PHOTOPRISM_DATABASE_PASSWORD: <MARIADB_PASSWORD>
        repoURL: https://bjw-s.github.io/helm-charts
        chart: app-template
        targetRevision: 1.5.1
      - helm:
          releaseName: mariadb
          values: |
            image:
              repository: docker.io/library/mariadb
              pullPolicy: IfNotPresent
              tag: 10.10
            args:
              - --innodb-buffer-pool-size=512M 
              - --transaction-isolation=READ-COMMITTED 
              - --character-set-server=utf8mb4 
              - --collation-server=utf8mb4_unicode_ci 
              - --max-connections=512 
              - --innodb-rollback-on-timeout=OFF 
              - --innodb-lock-wait-timeout=120
            env:
              MARIADB_DATABASE: <MARIADB_DATABASE>
              MARIADB_ROOT_PASSWORD: <MARIADB_ROOT_PASSWORD>
              MARIADB_USER: <MARIADB_USER>
              MARIADB_PASSWORD: <MARIADB_PASSWORD>
              MYSQL_PASSWORD: <MARIADB_ROOT_PASSWORD>
              MYSQL_ROOT_PASSWORD: <MARIADB_ROOT_PASSWORD>
              MARIADB_AUTO_UPGRADE: "1"
              MARIADB_INITDB_SKIP_TZINFO: "1"
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
            probes:
              # startup:
              #   enabled: true
              #   custom: true
              #   spec:
              #     exec:
              #       command:
              #         - cat
              #         - /tmp/mysqlrestore/restored
              #     failureThreshold: 30
              #     periodSeconds: 20
              #     initialDelaySeconds: 10
              readiness:
                enabled: true
                type: TCP
                spec:
                  tcpSocket:
                    port: 3306
                  initialDelaySeconds: 5
                  failureThreshold: 3
                  timeoutSeconds: 30
                  periodSeconds: 20           
            service:
              main:
                ports:
                  http:
                    port: 3306
            persistence:
              mysql-storage:
                enabled: true
                type: emptyDir
                mountPath: /var/lib/mysql
              mysql-restored-mark:
                enabled: true
                type: emptyDir
                mountPath: /tmp/mysqlrestore/           
            secrets:
              b-r-secret:
                enabled: true
                labels: {}
                annotations: {}
                stringData:
                  S3_ENDPOINT: <path:k8secrets/minios3creds#minioendpoint>
                  AWS_KEY: <path:k8secrets/minios3creds#miniokey>
                  AWS_SECRET_KEY: <path:k8secrets/minios3creds#miniosecretkey>
            configMaps:
              b-r-settings:
                enabled: true
                data:
                  AWS_BUCKET: "photoprism-old-db"
                  S3_BUCKET_FOLDER: "photoprism-db"
                  S3_FILE_PREFIX: "photoprism-db"
                  BACKUP_INTERVAL: "3h"
                  PRUNE_INTERVAL: "48h"
                  COPIES_TO_KEEP: "35"
                  FORCE_RESTORE: "False"
            sidecars:
              mariadb-backup-daemon:
                image: quay.io/vadimzharov/podbackup:latest
                imagePullPolicy: Always
                command:
                  - podbackup
                args:
                  - backup-sql-daemon
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - podbackup
                        - restore-sql                  
                envFrom:
                - secretRef:
                    name: mariadb-b-r-secret
                - configMapRef:
                    name: mariadb-b-r-settings
        repoURL: https://bjw-s.github.io/helm-charts
        chart: app-template
        targetRevision: 1.5.1
      destination:
        server: '{{server}}' 
        namespace: photoprism-old
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
      