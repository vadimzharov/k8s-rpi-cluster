apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: immich-v
  namespace: argocd
  annotations:
    avp.kubernetes.io/path: "k8secrets/immich"
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          immich-v: "installed"
          k8s-csi-nfs: "installed"          
      values:
        revision: '{{metadata.annotations.branch-name}}'
        version: '{{metadata.labels.immich-tag}}'
  - clusters:
      selector:
        matchLabels:
          immich-v: "passive"
      values:
        revision: '{{metadata.annotations.branch-name}}'
      template:
        metadata: 
          name: '{{name}}-immich-v-passive' 
        spec:
          sources:
            - repoURL: https://github.com/vadimzharov/k8s-rpi-cluster.git
              targetRevision: '{{values.revision}}'
              path: k8s-rpi-apps-ingress/immich-v-ingress
          destination:
            server: '{{server}}'
            namespace: immich-v
          project: k8s-rpi-apps              
  template:
    metadata:
      name: '{{name}}-immich-v'
    spec:
      project: k8s-rpi-apps
      sources:
      - helm:
          releaseName: immich-v-deps
          values: |
            controllers:
            service:
              main:
                enabled: true
                ports:
                  http:
                    port: 3001
                annotations:
                  service.cilium.io/global: "true"
            persistence:
              config:
                nameOverride: "immich-v-library"
                # -- Enables or disables the persistence item. Defaults to true
                enabled: true
                type: persistentVolumeClaim
                storageClass: "sc-nfs"
            ingress:
              main:
                enabled: true
                ingressClassName: nginx
                annotations:
                  nginx.ingress.kubernetes.io/service-upstream: "true"
                  nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
                  nginx.ingress.kubernetes.io/proxy-body-size: "0"
                hosts:
                  - host: <path:k8secrets/ingresses#immich-v-hostname>.<path:k8secrets/ingresses#domainname>
                    paths:
                      - path: /
                        pathType: Prefix
                        service:
                          name: main
                          port: http
        repoURL: https://bjw-s.github.io/helm-charts
        chart: app-template
        targetRevision: 2.4.0      
      - helm:
          releaseName: immich-v
          values: |
            env:
              IMMICH_MACHINE_LEARNING_URL: "false"
            image:
              tag: '{{metadata.labels.immich-tag}}'
            immich:
              persistence:
                library:
                  existingClaim: immich-v-deps-immich-v-library
            redis:
              enabled: true
              architecture: standalone
              master:
                persistence:
                  enabled: false
              auth:
                enabled: false
            machine-learning:
              enabled: false
            postgresql:
              enabled: true
              image:
                registry: quay.io
                repository: vadimzharov/immich-psql
                tag: 15
                debug: true
              global:
                storageClass: "sc-nfs"
                postgresql:
                  auth:
                    username: <pgsql_username>
                    password: <pgsql_password>
                    postgresPassword: <pgsql_password>
                    database: <pgsql_database>
              primary:
                podSecurityContext:
                  enabled: true
                  fsGroup: 1024
                containerSecurityContext:
                  enabled: true
                  runAsUser: 1024              
                initdb:
                  scripts:
                    user: postgres
                    password:  <pgsql_password>
                    create-extensions.sql: |
                      ALTER SYSTEM SET shared_preload_libraries = "vectors.so"
                      CREATE EXTENSION IF NOT EXISTS cube;
                      CREATE EXTENSION IF NOT EXISTS earthdistance;
                      CREATE EXTENSION IF NOT EXISTS vectors;
            server:
              enabled: true
              image:
                repository: ghcr.io/immich-app/immich-server
                pullPolicy: IfNotPresent
            microservices:
              enabled: true
              image:
                repository: ghcr.io/immich-app/immich-server
                pullPolicy: IfNotPresent                
        repoURL: https://immich-app.github.io/immich-charts
        chart: immich
        targetRevision: 0.3.1
      destination:
        server: '{{server}}' 
        namespace: immich-v
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
      